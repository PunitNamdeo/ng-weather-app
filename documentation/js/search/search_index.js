var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.253,1,1.253]],["body/components/AppComponent.html",[0,1.504,1,1.689,2,1.605,3,0.23,4,0.189,5,1.428,6,1.428,7,1.428,8,1.207,9,0.189,10,1.428,11,1.428,12,3.013,13,2.199,14,2.199,15,2.199,16,3.312,17,2.199,18,2.716,19,0.371,20,0.849,21,4.019,22,0.426,23,0.048,24,3.698,25,1.042,26,1.042,27,1.605,28,0.91,29,1.763,30,0.426,31,0.551,32,0.23,33,0.371,34,1.428,35,1.207,36,2.716,37,0.986,38,2.375,39,2.716,40,2.199,41,1.859,42,1.859,43,2.199,44,2.716,45,2.716,46,2.716,47,1.859,48,1.605,49,2.716,50,2.716,51,2.716,52,1.763,53,1.763,54,2.716,55,2.716,56,1.428,57,2.682,58,2.682,59,1.763,60,3.437,61,1.763,62,2.716,63,4.019,64,2.199,65,1.763,66,1.428,67,1.763,68,1.428,69,2.199,70,2.716,71,3.437,72,2.682,73,2.716,74,2.682,75,2.716,76,2.716,77,2.682,78,3.312,79,2.682,80,3.312,81,1.763,82,1.763,83,1.763,84,1.763,85,1.763,86,1.859,87,2.199,88,1.763,89,3.312,90,1.763,91,1.763,92,1.428,93,2.199,94,1.428,95,1.763,96,1.428,97,1.428,98,1.763,99,1.763,100,1.763,101,1.763,102,1.763,103,1.428,104,1.763,105,1.763,106,0.91,107,2.199,108,2.199,109,1.428,110,3.013,111,1.428,112,1.088,113,1.428,114,0.8,115,1.428,116,1.428,117,0.015,118,0.023,119,0.015]],["title/modules/AppModule.html",[120,0.863,121,1.631]],["body/modules/AppModule.html",[1,2.405,2,1.464,3,0.323,4,0.265,9,0.265,13,1.464,23,0.048,30,1.237,31,0.775,32,0.455,33,0.522,37,0.522,106,1.279,117,0.021,118,0.03,119,0.021,120,1.447,121,3.026,122,1.236,123,1.279,124,1.835,125,2.767,126,2.063,127,1.696,128,2.007,129,2.007,130,2.007,131,2.007,132,2.478,133,2.39,134,1.696,135,1.464,136,2.478,137,1.802,138,1.802,139,2.828,140,2.39,141,1.464,142,2.478,143,3.492,144,2.478,145,2.478,146,2.478,147,2.828,148,2.007,149,2.478,150,2.478,151,2.007,152,1.696,153,3.492,154,2.007,155,2.478,156,2.007,157,2.478,158,2.478,159,2.007,160,2.478,161,3.492,162,2.478,163,3.492,164,2.478,165,2.478,166,2.478,167,3.492,168,2.007]],["title/interfaces/City.html",[169,0.502,170,0.978]],["body/interfaces/City.html",[3,0.46,4,0.378,9,0.378,19,0.743,20,1.382,22,1.068,23,0.047,30,0.853,32,0.46,112,2.026,117,0.03,118,0.038,119,0.03,169,0.804,170,1.791,171,1.415,172,2.416,173,3.461,174,1.881,175,1.068,176,2.859,177,1.603,178,2.086]],["title/modules/CoreModule.html",[120,0.863,179,1.89]],["body/modules/CoreModule.html",[3,0.495,4,0.407,9,0.407,23,0.048,30,1.117,31,1.187,32,0.495,33,0.799,117,0.032,118,0.04,119,0.032,122,1.344,124,1.723,137,1.96,138,2.386,179,3.164,180,3.796,181,3.164,182,2.243]],["title/modules/DataModule.html",[120,0.863,183,1.89]],["body/modules/DataModule.html",[3,0.495,4,0.407,9,0.407,23,0.048,30,1.117,31,1.187,32,0.495,33,0.799,117,0.032,118,0.04,119,0.032,122,1.344,124,1.723,137,1.96,138,2.386,181,3.164,182,2.243,183,3.164,184,3.796]],["title/interfaces/IWeatherData.html",[169,0.502,175,0.667]],["body/interfaces/IWeatherData.html",[3,0.405,4,0.333,9,0.333,19,0.654,20,1.274,22,1.165,23,0.048,32,0.405,37,1.118,117,0.027,118,0.035,119,0.027,169,0.877,171,1.246,174,1.773,175,0.984,185,1.605,186,2.652,187,2.489,188,2.128,189,1.661,190,1.411,191,2.407,192,1.411,193,1.605,194,1.246]],["title/interfaces/IWeatherDataList.html",[169,0.502,177,1.253]],["body/interfaces/IWeatherDataList.html",[3,0.456,4,0.375,9,0.375,19,0.737,20,1.374,22,1.062,23,0.047,30,0.845,32,0.456,112,1.402,117,0.03,118,0.038,119,0.03,169,0.799,170,1.926,171,1.402,172,2.395,173,2.395,174,1.557,175,1.218,176,2.834,177,1.996,178,2.979,186,2.269]],["title/interfaces/Main.html",[169,0.502,188,1.106]],["body/interfaces/Main.html",[3,0.452,4,0.372,9,0.372,19,0.73,20,1.367,22,0.838,23,0.048,32,0.452,37,1.008,117,0.03,118,0.037,119,0.03,169,0.914,171,1.39,174,1.695,175,0.838,185,1.791,187,1.791,188,2.014,189,1.497,190,2.281,191,2.97,192,1.575,193,1.791,194,1.39]],["title/modules/SharedModule.html",[120,0.863,195,1.89]],["body/modules/SharedModule.html",[3,0.495,4,0.407,9,0.407,23,0.048,30,1.117,31,1.187,32,0.495,33,0.799,117,0.032,118,0.04,119,0.032,122,1.344,124,1.723,137,1.96,138,2.386,181,3.164,182,2.243,195,3.164,196,3.796]],["title/interfaces/Weather.html",[37,0.581,169,0.502]],["body/interfaces/Weather.html",[3,0.432,4,0.355,9,0.355,19,0.697,20,1.327,22,1.025,23,0.047,32,0.432,37,1.04,117,0.028,118,0.036,119,0.028,169,0.898,171,1.327,174,1.882,175,0.8,185,1.71,186,2.55,187,1.71,188,1.877,189,1.465,190,1.504,191,2.509,192,2.243,193,2.55,194,1.327]],["title/components/WeatherComponent.html",[0,1.253,114,1.253]],["body/components/WeatherComponent.html",[0,1.2,1,0.451,2,1.006,3,0.13,4,0.106,5,0.805,6,0.805,7,0.805,8,0.68,9,0.106,11,0.805,12,2.14,13,1.561,15,1.378,17,1.378,19,0.358,20,0.532,22,0.882,23,0.049,24,1.378,25,1.561,26,1.561,27,1.006,28,2.209,30,0.539,31,0.311,32,0.13,33,0.358,35,1.165,37,0.881,38,2.158,41,1.165,42,1.527,48,1.318,56,1.378,57,2.14,58,3.088,60,2.623,64,2.14,66,0.805,68,1.378,69,1.378,71,0.805,72,1.378,74,0.805,77,0.805,79,0.805,86,2.033,87,1.807,92,1.807,94,1.378,96,1.378,97,0.805,103,0.805,106,0.513,107,1.378,108,1.378,109,0.805,110,2.14,111,0.805,112,1.19,113,0.805,114,1.349,115,0.805,116,0.805,117,0.009,118,0.015,119,0.009,126,1.006,159,1.378,170,1.052,174,1.482,175,0.539,178,0.587,186,1.152,187,0.878,189,0.826,190,0.773,192,1.349,194,1.298,197,0.805,198,1.702,199,2.231,200,2.473,201,2.231,202,1.702,203,2.971,204,2.231,205,2.231,206,2.231,207,2.231,208,2.231,209,2.231,210,1.702,211,1.165,212,1.378,213,1.165,214,2.642,215,0.805,216,0.994,217,1.702,218,1.807,219,1.702,220,0.994,221,1.527,222,3.239,223,1.378,224,0.994,225,0.994,226,1.378,227,1.378,228,1.378,229,1.378,230,1.378,231,0.994,232,0.994,233,0.994,234,0.994,235,1.702,236,0.994,237,2.231,238,0.994,239,0.994,240,0.994,241,0.68,242,0.994,243,0.994,244,0.805,245,0.994,246,1.807,247,1.378,248,0.994,249,0.994,250,0.994,251,0.805,252,0.994,253,0.994,254,1.702,255,1.807,256,2.231,257,1.702,258,1.702,259,0.994,260,0.994,261,0.994,262,0.994,263,0.68,264,0.805,265,0.994,266,0.994,267,0.994,268,0.994,269,0.994,270,1.165,271,2.642,272,0.994,273,0.994,274,1.702,275,0.994,276,1.807,277,0.805,278,0.994,279,0.994,280,0.994,281,1.702,282,1.702,283,1.702,284,1.702,285,2.642,286,1.702,287,1.702,288,1.378,289,1.702,290,1.702,291,1.702,292,1.702,293,1.378,294,1.378,295,1.378,296,1.702,297,1.378,298,1.702,299,1.702,300,1.702,301,1.702,302,1.702,303,0.994,304,0.994,305,0.994,306,0.994,307,1.702,308,1.702,309,2.642,310,3.651,311,3.463,312,0.805,313,1.702,314,0.994,315,0.994,316,0.994,317,0.994,318,1.378,319,1.702,320,0.994,321,0.994,322,0.994,323,0.994,324,0.994,325,0.994,326,1.702,327,1.702,328,0.994,329,0.994,330,2.642,331,1.702,332,0.994,333,0.994,334,0.994,335,0.994,336,0.994,337,0.994,338,1.702]],["title/modules/WeatherModule.html",[120,0.863,132,1.425]],["body/modules/WeatherModule.html",[3,0.375,4,0.308,9,0.308,23,0.049,30,1.214,31,0.899,32,0.375,33,0.605,106,1.484,114,2.466,117,0.025,118,0.033,119,0.025,120,0.899,122,1.018,123,1.484,124,1.985,125,1.968,126,2.286,127,2.992,132,2.651,133,2.648,134,1.968,135,1.699,137,1.484,138,1.997,139,3.133,140,1.968,141,1.699,152,1.968,339,2.329,340,2.329,341,2.329,342,2.876,343,2.876,344,2.329,345,3.869,346,2.876,347,3.869,348,2.876,349,3.869,350,2.876,351,2.876]],["title/injectables/WeatherService.html",[200,1.631,352,1.631]],["body/injectables/WeatherService.html",[3,0.251,4,0.206,9,0.206,14,1.557,19,0.405,20,0.907,22,1.061,23,0.049,25,1.714,26,1.714,28,2.267,30,1.061,31,0.601,32,0.251,33,0.611,35,1.316,37,0.736,38,1.136,47,1.316,48,2.3,93,1.557,112,1.559,117,0.016,118,0.025,119,0.016,156,1.557,168,1.557,170,1.027,174,1.733,175,0.464,177,0.873,186,2.009,200,1.714,211,1.986,213,1.986,215,1.557,218,3.151,221,2.392,223,2.349,241,1.316,255,3.556,263,1.316,270,1.316,352,1.714,353,1.923,354,1.557,355,4.391,356,3.494,357,3.494,358,2.901,359,2.901,360,1.923,361,3.892,362,2.901,363,2.901,364,1.923,365,3.691,366,2.901,367,1.923,368,2.901,369,3.892,370,1.923,371,2.901,372,2.901,373,1.923,374,1.923,375,1.316,376,1.923,377,1.923,378,1.923,379,1.557,380,1.923,381,1.923,382,2.901,383,1.923,384,2.901,385,2.829,386,1.923,387,2.901,388,2.901,389,1.923,390,1.923,391,1.923,392,1.923,393,1.923,394,1.923,395,3.494,396,1.923,397,1.923,398,1.923,399,1.923,400,2.901,401,1.923,402,1.557,403,1.557,404,1.923,405,1.923,406,1.923]],["title/classes/WeatherServiceMock.html",[33,0.581,407,1.89]],["body/classes/WeatherServiceMock.html",[3,0.374,4,0.307,9,0.307,19,0.603,23,0.048,28,1.992,30,1.054,32,0.374,33,0.603,37,0.919,112,1.148,117,0.025,118,0.033,119,0.025,170,1.015,173,1.961,175,0.692,177,1.301,178,1.693,188,1.749,189,1.364,190,1.981,192,1.981,193,2.253,194,1.749,211,2.642,212,3.781,213,3.196,221,2.642,228,2.32,241,1.961,365,3.946,375,1.961,379,2.32,385,3.125,407,2.642,408,2.866,409,2.32,410,2.866,411,2.866,412,3.859,413,3.859,414,3.859,415,3.859,416,3.859,417,2.866,418,2.866,419,2.866,420,2.866,421,2.866,422,2.866]],["title/interfaces/Wind.html",[169,0.502,189,0.863]],["body/interfaces/Wind.html",[3,0.452,4,0.372,9,0.372,19,0.73,20,1.367,22,0.838,23,0.048,32,0.452,37,1.008,117,0.03,118,0.037,119,0.03,169,0.914,171,1.39,174,1.695,175,0.838,185,1.791,187,1.791,188,1.918,189,1.571,190,1.575,191,2.97,192,1.575,193,1.791,194,2.014]],["title/coverage.html",[423,2.576]],["body/coverage.html",[0,1.826,1,1.385,9,0.327,10,2.47,22,0.737,23,0.047,27,1.802,33,0.642,37,0.642,86,3.751,114,1.385,117,0.026,118,0.034,119,0.026,169,0.929,170,1.08,172,2.754,175,0.737,177,1.385,185,2.471,188,1.222,189,0.954,197,2.47,200,1.802,247,2.47,352,1.802,354,2.47,407,2.088,409,2.47,423,2.088,424,2.47,425,3.05,426,3.05,427,4.502,428,3.05,429,4.787,430,3.05,431,3.05,432,2.47,433,4.023,434,2.754,435,4.023,436,2.47,437,3.05]],["title/dependencies.html",[123,1.713,438,2.308]],["body/dependencies.html",[23,0.048,31,1.114,117,0.03,118,0.038,119,0.03,123,1.838,140,3.042,141,2.626,182,2.105,375,2.438,439,3.561,440,5.459,441,3.561,442,4.444,443,3.561,444,3.561,445,3.561,446,3.561,447,3.561,448,3.561,449,3.561,450,3.561,451,3.561,452,3.561]],["title/index.html",[19,0.486,453,2.308,454,2.308]],["body/index.html",[0,1.592,4,0.169,8,1.707,13,2.072,23,0.044,27,1.473,28,0.816,34,1.279,37,0.854,38,0.934,40,1.279,41,1.082,42,1.707,43,1.279,47,2.114,48,1.825,112,0.633,117,0.014,118,0.021,119,0.014,120,0.494,135,0.934,147,2.019,148,1.279,151,2.019,152,1.082,154,2.019,170,0.559,189,0.78,194,1.237,226,1.279,227,1.279,229,1.279,230,1.279,244,2.501,246,1.279,263,2.114,264,1.279,270,2.777,276,1.279,277,1.279,288,2.019,293,1.279,294,2.019,295,2.019,297,1.279,318,3.564,344,3.831,402,2.019,403,3.091,423,2.114,424,2.019,434,1.082,455,1.58,456,1.58,457,2.493,458,2.493,459,2.493,460,2.493,461,1.58,462,2.493,463,1.58,464,1.58,465,1.58,466,1.58,467,3.088,468,1.58,469,1.58,470,1.58,471,1.58,472,1.58,473,1.58,474,1.58,475,1.58,476,2.493,477,1.58,478,1.58,479,1.58,480,2.493,481,3.817,482,1.58,483,1.58,484,1.58,485,1.58,486,1.58,487,2.493,488,1.58,489,1.58,490,1.58,491,1.58,492,1.58,493,2.493,494,2.493,495,1.58,496,1.58,497,1.58,498,1.58,499,1.58,500,2.493,501,1.58,502,1.58,503,1.58,504,1.58,505,4.53,506,4.246,507,3.088,508,1.58,509,1.58,510,1.58,511,1.58,512,1.58,513,2.493,514,1.58,515,1.58,516,1.58,517,1.58,518,1.58,519,1.58,520,1.58,521,1.58,522,1.58,523,1.58,524,1.58,525,1.58,526,1.58,527,1.58,528,1.58,529,1.58,530,1.58,531,1.58,532,1.58,533,3.088,534,1.58,535,1.58,536,1.58,537,1.58,538,1.58,539,1.58,540,1.58,541,1.58,542,1.58,543,1.58,544,1.58,545,3.088,546,1.58,547,3.817,548,1.58,549,1.58,550,1.58,551,1.58,552,1.58,553,1.58,554,1.279,555,2.493,556,2.493,557,3.507,558,2.493,559,2.493,560,2.493,561,1.58,562,2.493,563,1.58,564,1.58,565,1.58,566,1.58,567,3.507,568,1.58,569,1.58,570,1.58,571,3.088,572,3.088,573,1.58,574,1.58,575,1.58,576,1.58,577,1.58,578,1.58,579,1.58,580,1.58,581,1.58,582,1.58,583,1.58,584,1.58,585,1.58,586,1.58,587,2.493,588,1.58,589,1.58,590,1.58,591,1.58,592,1.58,593,1.58,594,1.082,595,1.58,596,1.58]],["title/modules.html",[122,1.333]],["body/modules.html",[23,0.04,117,0.033,118,0.04,119,0.033,121,2.308,122,1.383,132,2.017,141,2.779,179,2.674,183,2.674,195,2.674,597,4.703,598,4.703,599,5.359,600,5.046,601,5.046]],["title/overview.html",[594,2.576]],["body/overview.html",[1,2.41,2,1.95,23,0.045,33,0.694,106,1.703,114,2.41,117,0.028,118,0.036,119,0.028,120,1.032,121,3.137,122,1.168,123,1.703,124,1.498,125,2.258,126,1.95,127,2.258,128,2.672,129,2.672,130,2.672,131,2.672,132,2.695,133,2.898,134,2.258,135,1.95,171,1.322,312,3.429,339,2.672,340,2.672,341,2.672,352,1.95,594,2.258,602,3.299,603,3.299,604,3.299]],["title/miscellaneous/variables.html",[605,1.869,606,2.688]],["body/miscellaneous/variables.html",[19,0.792,22,1.11,23,0.048,25,2.716,26,2.716,117,0.032,118,0.039,119,0.032,251,3.722,432,3.045,434,3.539,436,3.045,554,3.722,605,3.045,606,3.045,607,3.761,608,3.761,609,3.761,610,3.761]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/City.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"interfaces/IWeatherData.html":{},"interfaces/IWeatherDataList.html":{},"interfaces/Main.html":{},"modules/SharedModule.html":{},"interfaces/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"classes/WeatherServiceMock.html":{},"interfaces/Wind.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{}}}],["0.11.3",{"_index":452,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":435,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":430,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":427,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":429,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":428,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":431,"title":{},"body":{"coverage.html":{}}}],["03n",{"_index":414,"title":{},"body":{"classes/WeatherServiceMock.html":{}}}],["1",{"_index":312,"title":{},"body":{"components/WeatherComponent.html":{},"overview.html":{}}}],["1.6",{"_index":422,"title":{},"body":{"classes/WeatherServiceMock.html":{}}}],["100",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["100vh",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["100vw",{"_index":304,"title":{},"body":{"components/WeatherComponent.html":{}}}],["10d",{"_index":420,"title":{},"body":{"classes/WeatherServiceMock.html":{}}}],["10px",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["11.2.3",{"_index":535,"title":{},"body":{"index.html":{}}}],["11.2.4",{"_index":440,"title":{},"body":{"dependencies.html":{}}}],["11.2.8",{"_index":442,"title":{},"body":{"dependencies.html":{}}}],["11.2.x",{"_index":487,"title":{},"body":{"index.html":{}}}],["12",{"_index":277,"title":{},"body":{"components/WeatherComponent.html":{},"index.html":{}}}],["14.15.x",{"_index":492,"title":{},"body":{"index.html":{}}}],["15",{"_index":313,"title":{},"body":{"components/WeatherComponent.html":{}}}],["15px",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["161",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["181e41",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["18px",{"_index":322,"title":{},"body":{"components/WeatherComponent.html":{}}}],["2",{"_index":603,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":450,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["2021",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["20px",{"_index":309,"title":{},"body":{"components/WeatherComponent.html":{}}}],["224",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["238",{"_index":317,"title":{},"body":{"components/WeatherComponent.html":{}}}],["281.54",{"_index":421,"title":{},"body":{"classes/WeatherServiceMock.html":{}}}],["284.54",{"_index":415,"title":{},"body":{"classes/WeatherServiceMock.html":{}}}],["3",{"_index":473,"title":{},"body":{"index.html":{}}}],["30px",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["31afe0",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["34px",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":274,"title":{},"body":{"components/WeatherComponent.html":{}}}],["4.6",{"_index":416,"title":{},"body":{"classes/WeatherServiceMock.html":{}}}],["40px",{"_index":334,"title":{},"body":{"components/WeatherComponent.html":{}}}],["5",{"_index":602,"title":{},"body":{"overview.html":{}}}],["50",{"_index":336,"title":{},"body":{"components/WeatherComponent.html":{}}}],["500",{"_index":325,"title":{},"body":{"components/WeatherComponent.html":{}}}],["5px",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["6",{"_index":604,"title":{},"body":{"overview.html":{}}}],["6.6.0",{"_index":448,"title":{},"body":{"dependencies.html":{}}}],["600px",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["64px",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["70",{"_index":321,"title":{},"body":{"components/WeatherComponent.html":{}}}],["87cefa",{"_index":314,"title":{},"body":{"components/WeatherComponent.html":{}}}],["abstraction",{"_index":513,"title":{},"body":{"index.html":{}}}],["actions",{"_index":511,"title":{},"body":{"index.html":{}}}],["actual_component",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["adding",{"_index":502,"title":{},"body":{"index.html":{}}}],["again",{"_index":301,"title":{},"body":{"components/WeatherComponent.html":{}}}],["align",{"_index":327,"title":{},"body":{"components/WeatherComponent.html":{}}}],["amsterdam",{"_index":228,"title":{},"body":{"components/WeatherComponent.html":{},"classes/WeatherServiceMock.html":{}}}],["angular",{"_index":344,"title":{},"body":{"modules/WeatherModule.html":{},"index.html":{}}}],["angular/animations",{"_index":439,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":441,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":182,"title":{},"body":{"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"injectables/WeatherService.html":{}}}],["angular/compiler",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/SharedModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":444,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":445,"title":{},"body":{"dependencies.html":{}}}],["angular/material/card",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/expansion",{"_index":346,"title":{},"body":{"modules/WeatherModule.html":{}}}],["angular/material/progress",{"_index":350,"title":{},"body":{"modules/WeatherModule.html":{}}}],["angular/material/table",{"_index":348,"title":{},"body":{"modules/WeatherModule.html":{}}}],["angular/material/toolbar",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":447,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["apis",{"_index":461,"title":{},"body":{"index.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/WeatherComponent.html":{},"index.html":{}}}],["app.component",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":356,"title":{},"body":{"injectables/WeatherService.html":{}}}],["application",{"_index":458,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":121,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps",{"_index":571,"title":{},"body":{"index.html":{}}}],["architecture",{"_index":493,"title":{},"body":{"index.html":{}}}],["artifacts",{"_index":548,"title":{},"body":{"index.html":{}}}],["auto",{"_index":337,"title":{},"body":{"components/WeatherComponent.html":{}}}],["automatically",{"_index":540,"title":{},"body":{"index.html":{}}}],["available",{"_index":601,"title":{},"body":{"modules.html":{}}}],["average",{"_index":465,"title":{},"body":{"index.html":{}}}],["background",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["bar",{"_index":351,"title":{},"body":{"modules/WeatherModule.html":{}}}],["based",{"_index":264,"title":{},"body":{"components/WeatherComponent.html":{},"index.html":{}}}],["baseurl",{"_index":357,"title":{},"body":{"injectables/WeatherService.html":{}}}],["below",{"_index":566,"title":{},"body":{"index.html":{}}}],["berlin",{"_index":229,"title":{},"body":{"components/WeatherComponent.html":{},"index.html":{}}}],["best",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["big",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["bottom",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["box",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["broken",{"_index":412,"title":{},"body":{"classes/WeatherServiceMock.html":{}}}],["browse",{"_index":599,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{}}}],["build",{"_index":547,"title":{},"body":{"index.html":{}}}],["c",{"_index":338,"title":{},"body":{"components/WeatherComponent.html":{}}}],["calc",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["calc(100vh",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["call",{"_index":384,"title":{},"body":{"injectables/WeatherService.html":{}}}],["calls",{"_index":243,"title":{},"body":{"components/WeatherComponent.html":{}}}],["card",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["catcherror",{"_index":377,"title":{},"body":{"injectables/WeatherService.html":{}}}],["catcherror(this.handleerror",{"_index":388,"title":{},"body":{"injectables/WeatherService.html":{}}}],["center",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["change",{"_index":542,"title":{},"body":{"index.html":{}}}],["check",{"_index":562,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["child",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["child(1",{"_index":331,"title":{},"body":{"components/WeatherComponent.html":{}}}],["child(2",{"_index":335,"title":{},"body":{"components/WeatherComponent.html":{}}}],["child(3",{"_index":332,"title":{},"body":{"components/WeatherComponent.html":{}}}],["choice",{"_index":394,"title":{},"body":{"injectables/WeatherService.html":{}}}],["cities",{"_index":203,"title":{},"body":{"components/WeatherComponent.html":{}}}],["cities(amsterdam",{"_index":464,"title":{},"body":{"index.html":{}}}],["city",{"_index":170,"title":{"interfaces/City.html":{}},"body":{"interfaces/City.html":{},"interfaces/IWeatherDataList.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherServiceMock.html":{},"coverage.html":{},"index.html":{}}}],["class",{"_index":33,"title":{"classes/WeatherServiceMock.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/SharedModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"classes/WeatherServiceMock.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":408,"title":{},"body":{"classes/WeatherServiceMock.html":{}}}],["cli",{"_index":533,"title":{},"body":{"index.html":{}}}],["clicks",{"_index":469,"title":{},"body":{"index.html":{}}}],["client",{"_index":399,"title":{},"body":{"injectables/WeatherService.html":{}}}],["clouds",{"_index":413,"title":{},"body":{"classes/WeatherServiceMock.html":{}}}],["cluster_appmodule",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_weathermodule",{"_index":339,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_declarations",{"_index":340,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_exports",{"_index":341,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["code",{"_index":403,"title":{},"body":{"injectables/WeatherService.html":{},"index.html":{}}}],["color",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["columns",{"_index":248,"title":{},"body":{"components/WeatherComponent.html":{}}}],["command",{"_index":595,"title":{},"body":{"index.html":{}}}],["common",{"_index":390,"title":{},"body":{"injectables/WeatherService.html":{}}}],["commonmodule",{"_index":181,"title":{},"body":{"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/SharedModule.html":{}}}],["communication",{"_index":520,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":572,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"index.html":{}}}],["component/weather.component",{"_index":343,"title":{},"body":{"modules/WeatherModule.html":{}}}],["component_template",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/WeatherComponent.html":{},"overview.html":{}}}],["constructor",{"_index":215,"title":{},"body":{"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(http",{"_index":360,"title":{},"body":{"injectables/WeatherService.html":{}}}],["constructor(private",{"_index":383,"title":{},"body":{"injectables/WeatherService.html":{}}}],["constructor(public",{"_index":259,"title":{},"body":{"components/WeatherComponent.html":{}}}],["constructor(weatherservice",{"_index":216,"title":{},"body":{"components/WeatherComponent.html":{}}}],["container",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["contains",{"_index":381,"title":{},"body":{"injectables/WeatherService.html":{}}}],["content",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["copyright",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["core",{"_index":528,"title":{},"body":{"index.html":{}}}],["coremodule",{"_index":179,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules.html":{}}}],["country",{"_index":173,"title":{},"body":{"interfaces/City.html":{},"interfaces/IWeatherDataList.html":{},"classes/WeatherServiceMock.html":{}}}],["coverage",{"_index":423,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["created",{"_index":525,"title":{},"body":{"index.html":{}}}],["css",{"_index":328,"title":{},"body":{"components/WeatherComponent.html":{}}}],["current",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["currently",{"_index":252,"title":{},"body":{"components/WeatherComponent.html":{}}}],["data",{"_index":270,"title":{},"body":{"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["data.key",{"_index":281,"title":{},"body":{"components/WeatherComponent.html":{}}}],["data.list.slice(0",{"_index":279,"title":{},"body":{"components/WeatherComponent.html":{}}}],["data.value.main.temp",{"_index":282,"title":{},"body":{"components/WeatherComponent.html":{}}}],["data.value.wind.speed",{"_index":284,"title":{},"body":{"components/WeatherComponent.html":{}}}],["data/schema/weatherdata",{"_index":241,"title":{},"body":{"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherServiceMock.html":{}}}],["data/schema/weatherdatalist",{"_index":379,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherServiceMock.html":{}}}],["datamodule",{"_index":183,"title":{"modules/DataModule.html":{}},"body":{"modules/DataModule.html":{},"modules.html":{}}}],["date",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["declarations",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["decoupling",{"_index":514,"title":{},"body":{"index.html":{}}}],["deep.mat",{"_index":319,"title":{},"body":{"components/WeatherComponent.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherServiceMock.html":{},"index.html":{}}}],["deg;c",{"_index":283,"title":{},"body":{"components/WeatherComponent.html":{}}}],["delegate",{"_index":509,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":123,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":192,"title":{},"body":{"interfaces/IWeatherData.html":{},"interfaces/Main.html":{},"interfaces/Weather.html":{},"components/WeatherComponent.html":{},"classes/WeatherServiceMock.html":{},"interfaces/Wind.html":{}}}],["details",{"_index":246,"title":{},"body":{"components/WeatherComponent.html":{},"index.html":{}}}],["dev",{"_index":537,"title":{},"body":{"index.html":{}}}],["development",{"_index":500,"title":{},"body":{"index.html":{}}}],["di",{"_index":245,"title":{},"body":{"components/WeatherComponent.html":{}}}],["directive",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["directives",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":546,"title":{},"body":{"index.html":{}}}],["directories",{"_index":524,"title":{},"body":{"index.html":{}}}],["directory",{"_index":551,"title":{},"body":{"index.html":{}}}],["display",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["displayedcolumns",{"_index":204,"title":{},"body":{"components/WeatherComponent.html":{}}}],["dist",{"_index":550,"title":{},"body":{"index.html":{}}}],["div:nth",{"_index":330,"title":{},"body":{"components/WeatherComponent.html":{}}}],["document",{"_index":574,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":424,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documented",{"_index":581,"title":{},"body":{"index.html":{}}}],["documenting",{"_index":570,"title":{},"body":{"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["dt_txt",{"_index":187,"title":{},"body":{"interfaces/IWeatherData.html":{},"interfaces/Main.html":{},"interfaces/Weather.html":{},"components/WeatherComponent.html":{},"interfaces/Wind.html":{}}}],["due",{"_index":296,"title":{},"body":{"components/WeatherComponent.html":{}}}],["dynamic",{"_index":446,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":568,"title":{},"body":{"index.html":{}}}],["each",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["ease",{"_index":501,"title":{},"body":{"index.html":{}}}],["element",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["element.dt_txt",{"_index":286,"title":{},"body":{"components/WeatherComponent.html":{}}}],["element.main.temp",{"_index":289,"title":{},"body":{"components/WeatherComponent.html":{}}}],["element.weather[0].description",{"_index":291,"title":{},"body":{"components/WeatherComponent.html":{}}}],["element.wind.speed",{"_index":290,"title":{},"body":{"components/WeatherComponent.html":{}}}],["end",{"_index":567,"title":{},"body":{"index.html":{}}}],["environment",{"_index":434,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":271,"title":{},"body":{"components/WeatherComponent.html":{}}}],["error",{"_index":255,"title":{},"body":{"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["error.error",{"_index":396,"title":{},"body":{"injectables/WeatherService.html":{}}}],["error.error.message",{"_index":401,"title":{},"body":{"injectables/WeatherService.html":{}}}],["error.message",{"_index":405,"title":{},"body":{"injectables/WeatherService.html":{}}}],["error.status}\\nmessage",{"_index":404,"title":{},"body":{"injectables/WeatherService.html":{}}}],["errorevent",{"_index":398,"title":{},"body":{"injectables/WeatherService.html":{}}}],["errormessage",{"_index":395,"title":{},"body":{"injectables/WeatherService.html":{}}}],["errormessageofcurrentweather",{"_index":205,"title":{},"body":{"components/WeatherComponent.html":{}}}],["errormessageofforecastweather",{"_index":206,"title":{},"body":{"components/WeatherComponent.html":{}}}],["europe",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["european",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["execute",{"_index":559,"title":{},"body":{"index.html":{}}}],["expansion",{"_index":310,"title":{},"body":{"components/WeatherComponent.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/City.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"interfaces/IWeatherData.html":{},"interfaces/IWeatherDataList.html":{},"interfaces/Main.html":{},"modules/SharedModule.html":{},"interfaces/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"classes/WeatherServiceMock.html":{},"interfaces/Wind.html":{}}}],["exports",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["f3f3f3",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["fail",{"_index":258,"title":{},"body":{"components/WeatherComponent.html":{}}}],["false",{"_index":610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["features",{"_index":503,"title":{},"body":{"index.html":{}}}],["fecc96b805bc547775f602f5a2e3f1e2",{"_index":371,"title":{},"body":{"injectables/WeatherService.html":{}}}],["fetch",{"_index":293,"title":{},"body":{"components/WeatherComponent.html":{},"index.html":{}}}],["few",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{},"index.html":{}}}],["ff0000",{"_index":333,"title":{},"body":{"components/WeatherComponent.html":{}}}],["ffffff",{"_index":307,"title":{},"body":{"components/WeatherComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/City.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"interfaces/IWeatherData.html":{},"interfaces/IWeatherDataList.html":{},"interfaces/Main.html":{},"modules/SharedModule.html":{},"interfaces/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"classes/WeatherServiceMock.html":{},"interfaces/Wind.html":{},"coverage.html":{}}}],["files",{"_index":543,"title":{},"body":{"index.html":{}}}],["find",{"_index":295,"title":{},"body":{"components/WeatherComponent.html":{},"index.html":{}}}],["first",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["five",{"_index":463,"title":{},"body":{"index.html":{}}}],["flag",{"_index":553,"title":{},"body":{"index.html":{}}}],["focused",{"_index":583,"title":{},"body":{"index.html":{}}}],["folder",{"_index":526,"title":{},"body":{"index.html":{}}}],["followed",{"_index":494,"title":{},"body":{"index.html":{}}}],["font",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["footer",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["forecast",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["framework",{"_index":459,"title":{},"body":{"index.html":{}}}],["further",{"_index":592,"title":{},"body":{"index.html":{}}}],["generate",{"_index":545,"title":{},"body":{"index.html":{}}}],["generated",{"_index":532,"title":{},"body":{"index.html":{}}}],["getcityweatherforecast",{"_index":212,"title":{},"body":{"components/WeatherComponent.html":{},"classes/WeatherServiceMock.html":{}}}],["getcityweatherforecast(city",{"_index":219,"title":{},"body":{"components/WeatherComponent.html":{}}}],["gets",{"_index":257,"title":{},"body":{"components/WeatherComponent.html":{}}}],["getting",{"_index":453,"title":{"index.html":{}},"body":{}}],["getweatherbycity",{"_index":213,"title":{},"body":{"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherServiceMock.html":{}}}],["getweatherbycity(city",{"_index":223,"title":{},"body":{"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["getweatherforecastbycity",{"_index":358,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getweatherforecastbycity(city",{"_index":366,"title":{},"body":{"injectables/WeatherService.html":{}}}],["giving",{"_index":585,"title":{},"body":{"index.html":{}}}],["go",{"_index":593,"title":{},"body":{"index.html":{}}}],["gradient(to",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["graph",{"_index":600,"title":{},"body":{"modules.html":{}}}],["h4",{"_index":323,"title":{},"body":{"components/WeatherComponent.html":{}}}],["handleerror",{"_index":359,"title":{},"body":{"injectables/WeatherService.html":{}}}],["handleerror(error",{"_index":368,"title":{},"body":{"injectables/WeatherService.html":{}}}],["handling",{"_index":391,"title":{},"body":{"injectables/WeatherService.html":{}}}],["happen",{"_index":521,"title":{},"body":{"index.html":{}}}],["header",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["header:hover",{"_index":315,"title":{},"body":{"components/WeatherComponent.html":{}}}],["height",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["help",{"_index":244,"title":{},"body":{"components/WeatherComponent.html":{},"index.html":{}}}],["here",{"_index":476,"title":{},"body":{"index.html":{}}}],["hh:mm",{"_index":287,"title":{},"body":{"components/WeatherComponent.html":{}}}],["hours",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{},"index.html":{}}}],["hours(next",{"_index":471,"title":{},"body":{"index.html":{}}}],["html",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["http",{"_index":363,"title":{},"body":{"injectables/WeatherService.html":{}}}],["http://localhost:4200",{"_index":539,"title":{},"body":{"index.html":{}}}],["http://openweathermap.org/img/wn",{"_index":235,"title":{},"body":{"components/WeatherComponent.html":{}}}],["httpclient",{"_index":361,"title":{},"body":{"injectables/WeatherService.html":{}}}],["httpclientmodule",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":369,"title":{},"body":{"injectables/WeatherService.html":{}}}],["httpinterceptor",{"_index":393,"title":{},"body":{"injectables/WeatherService.html":{}}}],["https://api.openweathermap.org/data/2.5",{"_index":372,"title":{},"body":{"injectables/WeatherService.html":{}}}],["https://openweathermap.org/current",{"_index":477,"title":{},"body":{"index.html":{}}}],["icon",{"_index":193,"title":{},"body":{"interfaces/IWeatherData.html":{},"interfaces/Main.html":{},"interfaces/Weather.html":{},"classes/WeatherServiceMock.html":{},"interfaces/Wind.html":{}}}],["iconurl",{"_index":207,"title":{},"body":{"components/WeatherComponent.html":{}}}],["identifier",{"_index":425,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":198,"title":{},"body":{"components/WeatherComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/City.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"interfaces/IWeatherDataList.html":{},"modules/SharedModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"classes/WeatherServiceMock.html":{}}}],["important",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["importing",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["imports",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{}}}],["inc",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/City.html":{},"interfaces/IWeatherData.html":{},"interfaces/IWeatherDataList.html":{},"interfaces/Main.html":{},"interfaces/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherServiceMock.html":{},"interfaces/Wind.html":{},"miscellaneous/variables.html":{}}}],["indicator::after",{"_index":320,"title":{},"body":{"components/WeatherComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/City.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"interfaces/IWeatherData.html":{},"interfaces/IWeatherDataList.html":{},"interfaces/Main.html":{},"modules/SharedModule.html":{},"interfaces/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"classes/WeatherServiceMock.html":{},"interfaces/Wind.html":{}}}],["injectable",{"_index":352,"title":{"injectables/WeatherService.html":{}},"body":{"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":353,"title":{},"body":{"injectables/WeatherService.html":{}}}],["instanceof",{"_index":397,"title":{},"body":{"injectables/WeatherService.html":{}}}],["interact",{"_index":242,"title":{},"body":{"components/WeatherComponent.html":{}}}],["interface",{"_index":169,"title":{"interfaces/City.html":{},"interfaces/IWeatherData.html":{},"interfaces/IWeatherDataList.html":{},"interfaces/Main.html":{},"interfaces/Weather.html":{},"interfaces/Wind.html":{}},"body":{"interfaces/City.html":{},"interfaces/IWeatherData.html":{},"interfaces/IWeatherDataList.html":{},"interfaces/Main.html":{},"interfaces/Weather.html":{},"interfaces/Wind.html":{},"coverage.html":{}}}],["interfaces",{"_index":171,"title":{},"body":{"interfaces/City.html":{},"interfaces/IWeatherData.html":{},"interfaces/IWeatherDataList.html":{},"interfaces/Main.html":{},"interfaces/Weather.html":{},"interfaces/Wind.html":{},"overview.html":{}}}],["intervals",{"_index":472,"title":{},"body":{"index.html":{}}}],["introduction",{"_index":455,"title":{},"body":{"index.html":{}}}],["issue",{"_index":298,"title":{},"body":{"components/WeatherComponent.html":{}}}],["iweatherdata",{"_index":175,"title":{"interfaces/IWeatherData.html":{}},"body":{"interfaces/City.html":{},"interfaces/IWeatherData.html":{},"interfaces/IWeatherDataList.html":{},"interfaces/Main.html":{},"interfaces/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherServiceMock.html":{},"interfaces/Wind.html":{},"coverage.html":{}}}],["iweatherdatalist",{"_index":177,"title":{"interfaces/IWeatherDataList.html":{}},"body":{"interfaces/City.html":{},"interfaces/IWeatherDataList.html":{},"injectables/WeatherService.html":{},"classes/WeatherServiceMock.html":{},"coverage.html":{}}}],["karma",{"_index":561,"title":{},"body":{"index.html":{}}}],["key",{"_index":482,"title":{},"body":{"index.html":{}}}],["km/h",{"_index":285,"title":{},"body":{"components/WeatherComponent.html":{}}}],["later",{"_index":302,"title":{},"body":{"components/WeatherComponent.html":{}}}],["latest",{"_index":565,"title":{},"body":{"index.html":{}}}],["layer",{"_index":506,"title":{},"body":{"index.html":{}}}],["layout",{"_index":529,"title":{},"body":{"index.html":{}}}],["legend",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["library",{"_index":489,"title":{},"body":{"index.html":{}}}],["light",{"_index":418,"title":{},"body":{"classes/WeatherServiceMock.html":{}}}],["linear",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["list",{"_index":178,"title":{},"body":{"interfaces/City.html":{},"interfaces/IWeatherDataList.html":{},"components/WeatherComponent.html":{},"classes/WeatherServiceMock.html":{}}}],["load",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["loads",{"_index":261,"title":{},"body":{"components/WeatherComponent.html":{}}}],["location/city",{"_index":265,"title":{},"body":{"components/WeatherComponent.html":{}}}],["long",{"_index":504,"title":{},"body":{"index.html":{}}}],["loop",{"_index":262,"title":{},"body":{"components/WeatherComponent.html":{}}}],["lot",{"_index":580,"title":{},"body":{"index.html":{}}}],["ltd",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["main",{"_index":188,"title":{"interfaces/Main.html":{}},"body":{"interfaces/IWeatherData.html":{},"interfaces/Main.html":{},"interfaces/Weather.html":{},"classes/WeatherServiceMock.html":{},"interfaces/Wind.html":{},"coverage.html":{}}}],["maintain",{"_index":498,"title":{},"body":{"index.html":{}}}],["manipulation",{"_index":517,"title":{},"body":{"index.html":{}}}],["map",{"_index":237,"title":{},"body":{"components/WeatherComponent.html":{}}}],["margin",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["mat",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["matcardmodule",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/City.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"interfaces/IWeatherData.html":{},"interfaces/IWeatherDataList.html":{},"interfaces/Main.html":{},"modules/SharedModule.html":{},"interfaces/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"classes/WeatherServiceMock.html":{},"interfaces/Wind.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"index.html":{}}}],["materialmodule",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["matexpansionmodule",{"_index":345,"title":{},"body":{"modules/WeatherModule.html":{}}}],["matmodules",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressbarmodule",{"_index":349,"title":{},"body":{"modules/WeatherModule.html":{}}}],["mattablemodule",{"_index":347,"title":{},"body":{"modules/WeatherModule.html":{}}}],["mattoolbarmodule",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["means",{"_index":578,"title":{},"body":{"index.html":{}}}],["medium",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":256,"title":{},"body":{"components/WeatherComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["methods",{"_index":211,"title":{},"body":{"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherServiceMock.html":{}}}],["min",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["miscellaneous",{"_index":605,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":120,"title":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{}},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":122,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/weather/weather.module",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":587,"title":{},"body":{"index.html":{}}}],["much",{"_index":586,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":392,"title":{},"body":{"injectables/WeatherService.html":{}}}],["name",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"interfaces/City.html":{},"interfaces/IWeatherDataList.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherServiceMock.html":{},"index.html":{}}}],["navigate",{"_index":538,"title":{},"body":{"index.html":{}}}],["netherlands",{"_index":417,"title":{},"body":{"classes/WeatherServiceMock.html":{}}}],["new",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":276,"title":{},"body":{"components/WeatherComponent.html":{},"index.html":{}}}],["ng",{"_index":318,"title":{},"body":{"components/WeatherComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{}}}],["ngoninit",{"_index":214,"title":{},"body":{"components/WeatherComponent.html":{}}}],["node.js",{"_index":491,"title":{},"body":{"index.html":{}}}],["none",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["note",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["npm",{"_index":590,"title":{},"body":{"index.html":{}}}],["number",{"_index":191,"title":{},"body":{"interfaces/IWeatherData.html":{},"interfaces/Main.html":{},"interfaces/Weather.html":{},"interfaces/Wind.html":{}}}],["object",{"_index":251,"title":{},"body":{"components/WeatherComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":365,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherServiceMock.html":{}}}],["one",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"injectables/WeatherService.html":{}}}],["oninit",{"_index":199,"title":{},"body":{"components/WeatherComponent.html":{}}}],["open",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["optional",{"_index":186,"title":{},"body":{"interfaces/IWeatherData.html":{},"interfaces/IWeatherDataList.html":{},"interfaces/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["order",{"_index":480,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["out",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"index.html":{},"overview.html":{}}}],["outside",{"_index":518,"title":{},"body":{"index.html":{}}}],["overview",{"_index":594,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":438,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["page",{"_index":457,"title":{},"body":{"index.html":{}}}],["panel",{"_index":311,"title":{},"body":{"components/WeatherComponent.html":{}}}],["parameter",{"_index":485,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":218,"title":{},"body":{"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["paris",{"_index":226,"title":{},"body":{"components/WeatherComponent.html":{},"index.html":{}}}],["pipe(retry(1",{"_index":387,"title":{},"body":{"injectables/WeatherService.html":{}}}],["place",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["plain",{"_index":576,"title":{},"body":{"index.html":{}}}],["please",{"_index":299,"title":{},"body":{"components/WeatherComponent.html":{}}}],["position",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["practice",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["present",{"_index":508,"title":{},"body":{"index.html":{}}}],["principles",{"_index":496,"title":{},"body":{"index.html":{}}}],["private",{"_index":355,"title":{},"body":{"injectables/WeatherService.html":{}}}],["prod",{"_index":552,"title":{},"body":{"index.html":{}}}],["production",{"_index":554,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"interfaces/City.html":{},"interfaces/IWeatherData.html":{},"interfaces/IWeatherDataList.html":{},"interfaces/Main.html":{},"interfaces/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"interfaces/Wind.html":{}}}],["protractor",{"_index":569,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":380,"title":{},"body":{"injectables/WeatherService.html":{}}}],["providers",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["public",{"_index":210,"title":{},"body":{"components/WeatherComponent.html":{}}}],["query",{"_index":484,"title":{},"body":{"index.html":{}}}],["rain",{"_index":419,"title":{},"body":{"classes/WeatherServiceMock.html":{}}}],["reference",{"_index":596,"title":{},"body":{"index.html":{}}}],["register",{"_index":478,"title":{},"body":{"index.html":{}}}],["relative",{"_index":308,"title":{},"body":{"components/WeatherComponent.html":{}}}],["reload",{"_index":541,"title":{},"body":{"index.html":{}}}],["report",{"_index":294,"title":{},"body":{"components/WeatherComponent.html":{},"index.html":{}}}],["represents",{"_index":523,"title":{},"body":{"index.html":{}}}],["required",{"_index":483,"title":{},"body":{"index.html":{}}}],["reserved",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["reset",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["respected",{"_index":475,"title":{},"body":{"index.html":{}}}],["responsibilities",{"_index":516,"title":{},"body":{"index.html":{}}}],["responsible",{"_index":507,"title":{},"body":{"index.html":{}}}],["result",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/City.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"interfaces/IWeatherData.html":{},"interfaces/IWeatherDataList.html":{},"interfaces/Main.html":{},"modules/SharedModule.html":{},"interfaces/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"classes/WeatherServiceMock.html":{},"interfaces/Wind.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/City.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"interfaces/IWeatherData.html":{},"interfaces/IWeatherDataList.html":{},"interfaces/Main.html":{},"modules/SharedModule.html":{},"interfaces/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"classes/WeatherServiceMock.html":{},"interfaces/Wind.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":376,"title":{},"body":{"injectables/WeatherService.html":{}}}],["return",{"_index":385,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherServiceMock.html":{}}}],["returns",{"_index":221,"title":{},"body":{"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherServiceMock.html":{}}}],["rgb(0",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["rgb(188",{"_index":316,"title":{},"body":{"components/WeatherComponent.html":{}}}],["right",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"injectables/WeatherService.html":{}}}],["rights",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["rome",{"_index":230,"title":{},"body":{"components/WeatherComponent.html":{},"index.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/WeatherService.html":{}}}],["root'},{'name",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["row",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":505,"title":{},"body":{"index.html":{}}}],["running",{"_index":555,"title":{},"body":{"index.html":{}}}],["runs",{"_index":260,"title":{},"body":{"components/WeatherComponent.html":{}}}],["runtime",{"_index":490,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":375,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherServiceMock.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":378,"title":{},"body":{"injectables/WeatherService.html":{}}}],["save",{"_index":249,"title":{},"body":{"components/WeatherComponent.html":{}}}],["scaffolding",{"_index":544,"title":{},"body":{"index.html":{}}}],["scalability",{"_index":497,"title":{},"body":{"index.html":{}}}],["section",{"_index":329,"title":{},"body":{"components/WeatherComponent.html":{}}}],["see",{"_index":591,"title":{},"body":{"index.html":{}}}],["selected",{"_index":253,"title":{},"body":{"components/WeatherComponent.html":{}}}],["selectedweatherforecast",{"_index":208,"title":{},"body":{"components/WeatherComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["serve",{"_index":536,"title":{},"body":{"index.html":{}}}],["server",{"_index":402,"title":{},"body":{"injectables/WeatherService.html":{},"index.html":{}}}],["service",{"_index":263,"title":{},"body":{"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["services",{"_index":382,"title":{},"body":{"injectables/WeatherService.html":{}}}],["shadow",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["shared",{"_index":530,"title":{},"body":{"index.html":{}}}],["sharedmodule",{"_index":195,"title":{"modules/SharedModule.html":{}},"body":{"modules/SharedModule.html":{},"modules.html":{}}}],["shows",{"_index":462,"title":{},"body":{"index.html":{}}}],["side",{"_index":400,"title":{},"body":{"injectables/WeatherService.html":{}}}],["size",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["solution",{"_index":589,"title":{},"body":{"index.html":{}}}],["solves",{"_index":582,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/City.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"interfaces/IWeatherData.html":{},"interfaces/IWeatherDataList.html":{},"interfaces/Main.html":{},"modules/SharedModule.html":{},"interfaces/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"classes/WeatherServiceMock.html":{},"interfaces/Wind.html":{},"index.html":{}}}],["spa(single",{"_index":456,"title":{},"body":{"index.html":{}}}],["span",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["specific",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["specifically",{"_index":584,"title":{},"body":{"index.html":{}}}],["speed",{"_index":194,"title":{},"body":{"interfaces/IWeatherData.html":{},"interfaces/Main.html":{},"interfaces/Weather.html":{},"components/WeatherComponent.html":{},"classes/WeatherServiceMock.html":{},"interfaces/Wind.html":{},"index.html":{}}}],["src",{"_index":527,"title":{},"body":{"index.html":{}}}],["src/.../environment.prod.ts",{"_index":607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/core.module.ts",{"_index":180,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/data/data.module.ts",{"_index":184,"title":{},"body":{"modules/DataModule.html":{}}}],["src/app/data/schema/weatherdata.ts",{"_index":185,"title":{},"body":{"interfaces/IWeatherData.html":{},"interfaces/Main.html":{},"interfaces/Weather.html":{},"interfaces/Wind.html":{},"coverage.html":{}}}],["src/app/data/schema/weatherdatalist.ts",{"_index":172,"title":{},"body":{"interfaces/City.html":{},"interfaces/IWeatherDataList.html":{},"coverage.html":{}}}],["src/app/modules/weather/component/weather.component.ts",{"_index":197,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{}}}],["src/app/modules/weather/component/weather.component.ts:15",{"_index":231,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/modules/weather/component/weather.component.ts:16",{"_index":232,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/modules/weather/component/weather.component.ts:17",{"_index":238,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/modules/weather/component/weather.component.ts:18",{"_index":236,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/modules/weather/component/weather.component.ts:19",{"_index":233,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/modules/weather/component/weather.component.ts:20",{"_index":234,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/modules/weather/component/weather.component.ts:21",{"_index":217,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/modules/weather/component/weather.component.ts:23",{"_index":239,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/modules/weather/component/weather.component.ts:26",{"_index":225,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/modules/weather/component/weather.component.ts:34",{"_index":224,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/modules/weather/component/weather.component.ts:41",{"_index":220,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/modules/weather/component/weather.service.mock.ts",{"_index":409,"title":{},"body":{"classes/WeatherServiceMock.html":{},"coverage.html":{}}}],["src/app/modules/weather/component/weather.service.mock.ts:15",{"_index":410,"title":{},"body":{"classes/WeatherServiceMock.html":{}}}],["src/app/modules/weather/component/weather.service.mock.ts:7",{"_index":411,"title":{},"body":{"classes/WeatherServiceMock.html":{}}}],["src/app/modules/weather/weather.module.ts",{"_index":342,"title":{},"body":{"modules/WeatherModule.html":{}}}],["src/app/modules/weather/weather.service.ts",{"_index":354,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{}}}],["src/app/modules/weather/weather.service.ts:16",{"_index":373,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/modules/weather/weather.service.ts:17",{"_index":362,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/modules/weather/weather.service.ts:23",{"_index":364,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/modules/weather/weather.service.ts:29",{"_index":367,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/modules/weather/weather.service.ts:35",{"_index":370,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/shared/shared.module.ts",{"_index":196,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":432,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":436,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":486,"title":{},"body":{"index.html":{}}}],["started",{"_index":454,"title":{"index.html":{}},"body":{}}],["statements",{"_index":426,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":250,"title":{},"body":{"components/WeatherComponent.html":{}}}],["sticky",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["store",{"_index":254,"title":{},"body":{"components/WeatherComponent.html":{}}}],["stored",{"_index":549,"title":{},"body":{"index.html":{}}}],["stretch",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["string",{"_index":174,"title":{},"body":{"interfaces/City.html":{},"interfaces/IWeatherData.html":{},"interfaces/IWeatherDataList.html":{},"interfaces/Main.html":{},"interfaces/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"interfaces/Wind.html":{}}}],["structure",{"_index":522,"title":{},"body":{"index.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["stylesngweatherapp",{"_index":531,"title":{},"body":{"index.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["subscribe",{"_index":479,"title":{},"body":{"index.html":{}}}],["support",{"_index":597,"title":{},"body":{"modules.html":{}}}],["sustainable",{"_index":499,"title":{},"body":{"index.html":{}}}],["svg",{"_index":598,"title":{},"body":{"modules.html":{}}}],["table",{"_index":247,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":437,"title":{},"body":{"coverage.html":{}}}],["tailored",{"_index":588,"title":{},"body":{"index.html":{}}}],["td",{"_index":306,"title":{},"body":{"components/WeatherComponent.html":{}}}],["technical",{"_index":297,"title":{},"body":{"components/WeatherComponent.html":{},"index.html":{}}}],["temp",{"_index":190,"title":{},"body":{"interfaces/IWeatherData.html":{},"interfaces/Main.html":{},"interfaces/Weather.html":{},"components/WeatherComponent.html":{},"classes/WeatherServiceMock.html":{},"interfaces/Wind.html":{}}}],["temperature",{"_index":288,"title":{},"body":{"components/WeatherComponent.html":{},"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["terms",{"_index":474,"title":{},"body":{"index.html":{}}}],["test",{"_index":558,"title":{},"body":{"index.html":{}}}],["test/ng",{"_index":563,"title":{},"body":{"index.html":{}}}],["tests",{"_index":557,"title":{},"body":{"index.html":{}}}],["text",{"_index":326,"title":{},"body":{"components/WeatherComponent.html":{}}}],["th",{"_index":305,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.cities.foreach((cityobj",{"_index":266,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.errormessageofcurrentweather",{"_index":272,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.errormessageofforecastweather",{"_index":280,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.getweatherbycity(this.cities[index",{"_index":267,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.http.get(`${this.baseurl}forecast?units=metric&q=${city}&appid=${this.appid",{"_index":389,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.http.get(`${this.baseurl}weather?units=metric&q=${city}&appid=${this.appid",{"_index":386,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.selectedweatherforecast",{"_index":278,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.weatherlist.set(city",{"_index":269,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.weatherservice.getweatherbycity(city).subscribe(data",{"_index":268,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.weatherservice.getweatherforecastbycity(city).subscribe(data",{"_index":273,"title":{},"body":{"components/WeatherComponent.html":{}}}],["through",{"_index":512,"title":{},"body":{"index.html":{}}}],["throwerror",{"_index":374,"title":{},"body":{"injectables/WeatherService.html":{}}}],["throwerror(errormessage",{"_index":406,"title":{},"body":{"injectables/WeatherService.html":{}}}],["tile",{"_index":470,"title":{},"body":{"index.html":{}}}],["tiles",{"_index":466,"title":{},"body":{"index.html":{}}}],["till",{"_index":275,"title":{},"body":{"components/WeatherComponent.html":{}}}],["time",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"components/WeatherComponent.html":{}}}],["title",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["today",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["toolbar",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["treat",{"_index":575,"title":{},"body":{"index.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{},"index.html":{}}}],["true",{"_index":609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["try",{"_index":300,"title":{},"body":{"components/WeatherComponent.html":{}}}],["trying",{"_index":292,"title":{},"body":{"components/WeatherComponent.html":{}}}],["tslib",{"_index":449,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/City.html":{},"interfaces/IWeatherData.html":{},"interfaces/IWeatherDataList.html":{},"interfaces/Main.html":{},"interfaces/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"interfaces/Wind.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typedoc",{"_index":573,"title":{},"body":{"index.html":{}}}],["typescript",{"_index":577,"title":{},"body":{"index.html":{}}}],["ui",{"_index":488,"title":{},"body":{"index.html":{}}}],["unit",{"_index":556,"title":{},"body":{"index.html":{}}}],["use",{"_index":481,"title":{},"body":{"index.html":{}}}],["used",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["user",{"_index":468,"title":{},"body":{"index.html":{}}}],["user’s",{"_index":510,"title":{},"body":{"index.html":{}}}],["uses",{"_index":495,"title":{},"body":{"index.html":{}}}],["using",{"_index":460,"title":{},"body":{"index.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["variable",{"_index":433,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":606,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":534,"title":{},"body":{"index.html":{}}}],["very",{"_index":515,"title":{},"body":{"index.html":{}}}],["via",{"_index":560,"title":{},"body":{"index.html":{}}}],["view",{"_index":467,"title":{},"body":{"index.html":{}}}],["void",{"_index":222,"title":{},"body":{"components/WeatherComponent.html":{}}}],["watch",{"_index":564,"title":{},"body":{"index.html":{}}}],["weather",{"_index":37,"title":{"interfaces/Weather.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/IWeatherData.html":{},"interfaces/Main.html":{},"interfaces/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherServiceMock.html":{},"interfaces/Wind.html":{},"coverage.html":{},"index.html":{}}}],["weather.component.html",{"_index":202,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.scss",{"_index":201,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.service",{"_index":240,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weathercomponent",{"_index":114,"title":{"components/WeatherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"overview.html":{}}}],["weatherdata",{"_index":176,"title":{},"body":{"interfaces/City.html":{},"interfaces/IWeatherDataList.html":{}}}],["weatherlist",{"_index":209,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weatherlisteu",{"_index":303,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weathermodule",{"_index":132,"title":{"modules/WeatherModule.html":{}},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["weatherservice",{"_index":200,"title":{"injectables/WeatherService.html":{}},"body":{"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["weatherservicemock",{"_index":407,"title":{"classes/WeatherServiceMock.html":{}},"body":{"classes/WeatherServiceMock.html":{},"coverage.html":{}}}],["weight",{"_index":324,"title":{},"body":{"components/WeatherComponent.html":{}}}],["whole",{"_index":579,"title":{},"body":{"index.html":{}}}],["width",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["wind",{"_index":189,"title":{"interfaces/Wind.html":{}},"body":{"interfaces/IWeatherData.html":{},"interfaces/Main.html":{},"interfaces/Weather.html":{},"components/WeatherComponent.html":{},"classes/WeatherServiceMock.html":{},"interfaces/Wind.html":{},"coverage.html":{},"index.html":{}}}],["world",{"_index":519,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":451,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["zurich",{"_index":227,"title":{},"body":{"components/WeatherComponent.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                today\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            today\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  // display the current date\n  today: Date =  new Date();\n}\n\n    \n\n    \n        \n\n  \n  \n    \n      Europe Weather forecast\n    \n    \n      {{ today | date : 'medium'}}\n    \n  \n\n  \n  \n    \n      Checkout the weather of few hours!!\n    \n    \n      \n    \n    \n  \n\n  \n  \n    \n      European Weather Forecast Ltd.\n      Copyright © 2021 Open Weather API, inc. All rights reserved.\n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .container {\n  min-height: 100%;\n  width: 100%;\n  background-color: #f3f3f3;\n\n  mat-toolbar-row, mat-card-header {\n    place-content: stretch center;\n  }\n\n  .title > span {\n    padding-top: 34px;\n  }\n\n  .date > span{\n    padding-bottom: 34px;\n  }\n\n  mat-card {\n    background: linear-gradient(to bottom, rgb(0 161 224 / 20%), #31afe0);\n    box-shadow: none !important;\n    padding: 0;\n\n    mat-card-header {\n      color: #181e41;\n      padding: 30px;\n\n      mat-card-title {\n        color: #181e41;\n      }\n    }\n\n    .mat-card-footer {\n      background: linear-gradient(to bottom, rgb(0 161 224 / 20%), rgb(0 161 224 / 20%));\n      height: calc(100vh - 600px);\n      margin-right: 0;\n    }\n  }\n\n  .footer {\n    position: sticky;\n    font-size: 10px;\n    top: calc( 100vh - 64px );\n\n    .footer-row {\n      padding-top: 15px;\n\n      :first-child {\n        padding-right: 5px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Europe Weather forecast              {{ today | date : \\'medium\\'}}                    Checkout the weather of few hours!!                                      European Weather Forecast Ltd.      Copyright © 2021 Open Weather API, inc. All rights reserved.      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'WeatherComponent', 'selector': 'app-weather-forecast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nAppModule -->\n\nWeatherModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            WeatherModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule} from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n/*Note: In a big project, a best practice should be to create a specific module\nfor Material and export MatModules to be used in all the other modules and\ncomponents of your project by importing only one module, your “MaterialModule”.\nOtherwise, you have to import the MatModules every time in each module.*/\nimport { MatCardModule } from '@angular/material/card';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n// load module for weather app\nimport { WeatherModule } from './modules/weather/weather.module';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatToolbarModule,\n    WeatherModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/City.html":{"url":"interfaces/City.html","title":"interface - City","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  City\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/schema/weatherDataList.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        country\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IWeatherData } from './weatherData';\n\ninterface City {\n  name: string;\n  country: string;\n}\n\nexport interface IWeatherDataList {\n  list: IWeatherData[];\n  city?: City;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class CoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n    Modules\n    DataModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/data/data.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class DataModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWeatherData.html":{"url":"interfaces/IWeatherData.html","title":"interface - IWeatherData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IWeatherData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/schema/weatherData.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dt_txt\n                                \n                                \n                                        main\n                                \n                                \n                                            Optional\n                                        weather\n                                \n                                \n                                            Optional\n                                        wind\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dt_txt\n                                    \n                                \n                                \n                                    \n                                        dt_txt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        main\n                                    \n                                \n                                \n                                    \n                                        main:         Main\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Main\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weather\n                                    \n                                \n                                \n                                    \n                                        weather:         Weather[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Weather[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wind\n                                    \n                                \n                                \n                                    \n                                        wind:         Wind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Wind\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface  Main {\n  temp: number;\n}\n\ninterface  Weather {\n  description?: string;\n  icon?: string;\n}\n\ninterface Wind {\n  speed: number;\n}\n\nexport interface IWeatherData {\n  main: Main;\n  wind?: Wind;\n  weather?: Weather[];\n  dt_txt?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWeatherDataList.html":{"url":"interfaces/IWeatherDataList.html","title":"interface - IWeatherDataList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IWeatherDataList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/schema/weatherDataList.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                        list\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         City\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         City\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:     IWeatherData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IWeatherData[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IWeatherData } from './weatherData';\n\ninterface City {\n  name: string;\n  country: string;\n}\n\nexport interface IWeatherDataList {\n  list: IWeatherData[];\n  city?: City;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Main.html":{"url":"interfaces/Main.html","title":"interface - Main","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Main\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/schema/weatherData.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        temp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        temp\n                                    \n                                \n                                \n                                    \n                                        temp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface  Main {\n  temp: number;\n}\n\ninterface  Weather {\n  description?: string;\n  icon?: string;\n}\n\ninterface Wind {\n  speed: number;\n}\n\nexport interface IWeatherData {\n  main: Main;\n  wind?: Wind;\n  weather?: Weather[];\n  dt_txt?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\n\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Weather.html":{"url":"interfaces/Weather.html","title":"interface - Weather","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Weather\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/schema/weatherData.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface  Main {\n  temp: number;\n}\n\ninterface  Weather {\n  description?: string;\n  icon?: string;\n}\n\ninterface Wind {\n  speed: number;\n}\n\nexport interface IWeatherData {\n  main: Main;\n  wind?: Wind;\n  weather?: Weather[];\n  dt_txt?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/weather/component/weather.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                WeatherService\n                \n            \n\n\n            \n                selector\n                app-weather-forecast\n            \n\n            \n                styleUrls\n                ./weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cities\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                errorMessageOfCurrentWeather\n                            \n                            \n                                errorMessageOfForecastWeather\n                            \n                            \n                                iconUrl\n                            \n                            \n                                selectedWeatherForecast\n                            \n                            \n                                weatherList\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCityWeatherForecast\n                            \n                            \n                                getWeatherByCity\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/weather/component/weather.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                        WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCityWeatherForecast\n                        \n                        \n                    \n                \n            \n            \n                \ngetCityWeatherForecast(city)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/weather/component/weather.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWeatherByCity\n                        \n                        \n                    \n                \n            \n            \n                \ngetWeatherByCity(city)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/weather/component/weather.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/weather/component/weather.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['Paris', 'Zurich', 'Amsterdam', 'Berlin', 'Rome']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/weather/component/weather.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['dt_txt', 'temp', 'speed' , 'description']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/weather/component/weather.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessageOfCurrentWeather\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/weather/component/weather.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessageOfForecastWeather\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/weather/component/weather.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://openweathermap.org/img/wn/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/weather/component/weather.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedWeatherForecast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IWeatherData[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/weather/component/weather.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            weatherList\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/weather/component/weather.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/weather/component/weather.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { WeatherService } from '../weather.service';\nimport { IWeatherData } from '../../../data/schema/weatherData';\n\n@Component({\n  selector: 'app-weather-forecast',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss'],\n  providers: [WeatherService]\n})\n\n// WeatherComponent class to interact with weather API calls with the help of WeatherService DI\nexport class WeatherComponent implements OnInit {\n\n  cities: string[] = ['Paris', 'Zurich', 'Amsterdam', 'Berlin', 'Rome']; // list of cities\n  displayedColumns: string[] = ['dt_txt', 'temp', 'speed' , 'description']; // Weather Details table columns\n  weatherList = new Map(); // map to save current weather status of all cities\n  selectedWeatherForecast: IWeatherData[]; // forecast object of currently selected city\n  errorMessageOfCurrentWeather: string; // store the error message if api gets fail\n  errorMessageOfForecastWeather: string; // store the error message if api gets fail\n  iconUrl: string = 'http://openweathermap.org/img/wn/';\n\n  constructor(public weatherService: WeatherService){}\n\n  // runs as the component loads\n  ngOnInit(): void {\n    // loop the weather service based on the defined location/city\n    this.cities.forEach((cityObj, index) => {\n      this.getWeatherByCity(this.cities[index]);\n    });\n  }\n\n  // get current weather for a city\n  getWeatherByCity(city): void {\n    this.weatherService.getWeatherByCity(city).subscribe(data => {\n      this.weatherList.set(city, data);\n    }, (err: string) =>  this.errorMessageOfCurrentWeather = err);\n  }\n\n  // get weather forecast for a city\n  getCityWeatherForecast(city): void {\n    this.weatherService.getWeatherForecastByCity(city).subscribe(data => {\n      // get only first 4 forecast data ( till next 12 hours )\n      this.selectedWeatherForecast = data.list.slice(0, 4);\n    }, (err: string) =>  this.errorMessageOfForecastWeather = err);\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n      \n        {{ data.key }} ( {{ data.value.main.temp }} &deg;C )\n        \n      \n      \n        \n          Wind speed :{{ data.value.wind.speed }} km/h\n        \n      \n    \n\n    Forecast for next few hours\n\n    \n    \n      \n        \n        \n           Time \n          {{ element.dt_txt | date : 'HH:mm' }} \n        \n\n        \n          Temperature \n           {{element.main.temp}} &deg;C \n        \n\n        \n          Wind Speed \n           {{element.wind.speed}} km/h \n        \n\n        \n          Details\n          \n            {{element.weather[0].description}}\n            \n          \n        \n\n        \n        \n      \n    \n\n    \n    \n      \n    \n\n  \n\n\n\n\n  \n    \n      We are trying to fetch the weather report...\n    \n    \n      \n    \n    \n      ... But we can not find it due to some technical issue, Please try again later.\n    \n  \n\n\n\n\n  \n\n\n    \n\n    \n                \n                    ./weather.component.scss\n                \n                #weatherListEU {\n\n  table {\n    width: 100vw;\n    background-color: #181e41;\n\n    th, td {\n      color: #ffffff;\n    }\n\n    .description {\n      position: relative;\n      bottom: 20px;\n    }\n  }\n\n  mat-expansion-panel {\n    margin: 1% 15% 0 15%;\n\n    .mat-expansion-panel-header {\n      background-color: #87cefa;\n    }\n\n    .mat-expansion-panel-header:hover {\n      background-color: rgb(188 224 238);\n    }\n\n    .mat-expansion-panel-header-title {\n      color: #181e41;\n    }\n\n    .mat-expansion-panel-header-description, ::ng-deep.mat-expansion-indicator::after {\n      color: rgb(0 0 0 / 70%);\n    }\n\n    .weather-title, .mat-expansion-panel-header-description {\n      position: relative;\n      top: 18px;\n    }\n\n    h4 {\n      font-weight: 500;\n      color: #ffffff;\n      text-align: center;\n    }\n\n    ::ng-deep.mat-expansion-panel-content {\n      background-color: #181e41;\n    }\n  }\n}\n\n/*error message css*/\nsection {\n  text-align: center;\n\n  div:nth-child(1), div:nth-child(3) {\n    font-size: 20px;\n    color: #ff0000;\n  }\n\n  div:nth-child(1) {\n    margin-top: 40px;\n  }\n\n  div:nth-child(2) {\n    width: 50%;\n    margin: auto;\n    padding: 20px 0 20px 0;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{ data.key }} ( {{ data.value.main.temp }} °C )                                      Wind speed :{{ data.value.wind.speed }} km/h                      Forecast for next few hours                                         Time           {{ element.dt_txt | date : \\'HH:mm\\' }}                           Temperature            {{element.main.temp}} °C                           Wind Speed            {{element.wind.speed}} km/h                           Details                      {{element.weather[0].description}}                                                                                        We are trying to fetch the weather report...                            ... But we can not find it due to some technical issue, Please try again later.        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'WeatherComponent', 'selector': 'app-weather-forecast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n    Modules\n    WeatherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_exports\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nWeatherComponent->WeatherModule\n\n\n\n\n\nWeatherComponent \n\nWeatherComponent \n\nWeatherComponent  -->\n\nWeatherModule->WeatherComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/weather/weather.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            WeatherComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            WeatherComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { WeatherComponent } from './component/weather.component';\n\n// Angular Material\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\n\n@NgModule({\n  declarations: [\n    WeatherComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatExpansionModule,\n    MatTableModule,\n    MatProgressBarModule\n  ],\n  exports: [\n    WeatherComponent\n  ],\n  providers: []\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/weather/weather.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                appID\n                            \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWeatherByCity\n                            \n                            \n                                getWeatherForecastByCity\n                            \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/weather/weather.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWeatherByCity\n                        \n                        \n                    \n                \n            \n            \n                \ngetWeatherByCity(city: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/weather/weather.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWeatherForecastByCity\n                        \n                        \n                    \n                \n            \n            \n                \ngetWeatherForecastByCity(city: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/weather/weather.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/weather/weather.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            appID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'fecc96b805bc547775f602f5a2e3f1e2'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/weather/weather.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://api.openweathermap.org/data/2.5/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/weather/weather.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport { IWeatherData } from '../../data/schema/weatherData';\nimport { IWeatherDataList } from '../../data/schema/weatherDataList';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n// contains services for open weather API\nexport class WeatherService {\n\n  // API data\n  private baseUrl: string = 'https://api.openweathermap.org/data/2.5/';\n  private appID: string = 'fecc96b805bc547775f602f5a2e3f1e2';\n\n  constructor(private http: HttpClient) {\n  }\n\n  // current weather API call\n  getWeatherByCity(city: string): Observable {\n    return this.http.get(`${this.baseUrl}weather?units=metric&q=${city}&appid=${this.appID}`)\n      .pipe(retry(1), catchError(this.handleError));\n  }\n\n  // weather forecast API call\n  getWeatherForecastByCity(city: string): Observable {\n    return this.http.get(`${this.baseUrl}forecast?units=metric&q=${city}&appid=${this.appID}`)\n      .pipe(retry(1), catchError(this.handleError));\n  }\n\n  // common error handling for one service class. For multiple services HttpInterceptor would be right choice.\n  handleError(error: HttpErrorResponse): Observable {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // client-side error\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      // server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WeatherServiceMock.html":{"url":"classes/WeatherServiceMock.html","title":"class - WeatherServiceMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WeatherServiceMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/weather/component/weather.service.mock.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCityWeatherForecast\n                            \n                            \n                                getWeatherByCity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCityWeatherForecast\n                        \n                        \n                    \n                \n            \n            \n                \ngetCityWeatherForecast()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/weather/component/weather.service.mock.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWeatherByCity\n                        \n                        \n                    \n                \n            \n            \n                \ngetWeatherByCity()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/weather/component/weather.service.mock.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Observable, of} from 'rxjs';\nimport {IWeatherData} from '../../../data/schema/weatherData';\nimport {IWeatherDataList} from '../../../data/schema/weatherDataList';\n\nexport class WeatherServiceMock {\n\n  getWeatherByCity(): Observable {\n    return of({\n      weather: [{description: 'broken clouds', icon: '03n'}],\n      main: {temp: 284.54},\n      wind: {speed: 4.6}\n    });\n  }\n\n  getCityWeatherForecast(): Observable {\n    return of({\n      city: {name: 'Amsterdam', country: 'Netherlands'},\n      list: [\n        {\n          weather: [{description: 'broken clouds', icon: '03n'}],\n          main: {temp: 284.54},\n          wind: {speed: 4.6}\n        },\n        {\n          weather: [{description: 'light rain', icon: '10d'}],\n          main: {temp: 281.54},\n          wind: {speed: 1.6}\n        }]\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Wind.html":{"url":"interfaces/Wind.html","title":"interface - Wind","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Wind\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/schema/weatherData.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        speed\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        speed\n                                    \n                                \n                                \n                                    \n                                        speed:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface  Main {\n  temp: number;\n}\n\ninterface  Weather {\n  description?: string;\n  icon?: string;\n}\n\ninterface Wind {\n  speed: number;\n}\n\nexport interface IWeatherData {\n  main: Main;\n  wind?: Wind;\n  weather?: Weather[];\n  dt_txt?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/data/schema/weatherData.ts\n            \n            interface\n            IWeatherData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/data/schema/weatherData.ts\n            \n            interface\n            Main\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/data/schema/weatherData.ts\n            \n            interface\n            Weather\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/data/schema/weatherData.ts\n            \n            interface\n            Wind\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/data/schema/weatherDataList.ts\n            \n            interface\n            City\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/data/schema/weatherDataList.ts\n            \n            interface\n            IWeatherDataList\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/weather/component/weather.component.ts\n            \n            component\n            WeatherComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/modules/weather/component/weather.service.mock.ts\n            \n            class\n            WeatherServiceMock\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/weather/weather.service.ts\n            \n            injectable\n            WeatherService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.2.4\n        \n            @angular/cdk : ^11.2.8\n        \n            @angular/common : ~11.2.4\n        \n            @angular/compiler : ~11.2.4\n        \n            @angular/core : ~11.2.4\n        \n            @angular/forms : ~11.2.4\n        \n            @angular/material : ^11.2.8\n        \n            @angular/platform-browser : ~11.2.4\n        \n            @angular/platform-browser-dynamic : ~11.2.4\n        \n            @angular/router : ~11.2.4\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nIntroduction\nThis is a SPA(Single Page Application) based on Angular framework. This application is used to fetch and display weather data using the open weather data APIs.\nIt shows the five European cities(Amsterdam, Berlin, Paris, Rome, Zurich) average temperature with wind speed in a tiles view. When user clicks on the tile, \nIt shows the weather forecast for next few hours(next 12 hours in the intervals of 3 hours) in terms of temperature, wind speed and details of the respected city.\nYou can find the Open Weather Data API here - https://openweathermap.org/current,\nYou have to register and subscribe in order to use and get the API key which is required query parameter of the open weather data api.\nTechnical Stack Used\nFramework - Angular 11.2.x\nUI Component Library - Angular Material 11.2.x\nRuntime Environment - Node.js 14.15.x\nArchitecture followed\nThe architecture followed uses best principles for scalability in order to maintain sustainable development speed and ease of adding new features in the long run.\n\nView layer - is responsible to present and to delegate user’s actions to the service layer, through the abstraction layer .\nAbstraction layer - is responsible for a decoupling the view layer from the service layer and also has its very own defined responsibilities.\nService layer - is responsible for data manipulation and outside world communication happen here\nTree Structure\nThis tree represents the directories created.\n.\n├── weather-app-folder\n└── src\n├── app\n│   ├── core\n│   ├── data\n│   ├── layout\n│   ├── module\n│   └── shared\n└── stylesNgWeatherApp\nThis project was generated with Angular CLI version 11.2.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nCheck code coverage report\nRun ng test/ng test --no-watch --code-coverage.\nFind the latest code coverage report below\n\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nCheckout the Documenting Angular apps using CompoDoc -\nWhile you can use TypeDoc to document Angular apps, it will treat your code as any other plain TypeScript app. That means no Angular specific documentation. \nBut there is a whole lot to be documented. Compodoc solves this, it is focused on Angular apps specifically giving you a much more tailored solution.\nRun npm run compodoc to see the Angular specific documentation.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nAppModule -->\n\nWeatherModule->AppModule\n\n\n\n\n\nWeatherComponent \n\nWeatherComponent \n\nWeatherComponent  -->\n\nWeatherModule->WeatherComponent \n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nWeatherModule -->\n\nWeatherComponent->WeatherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
